{
	"name": "PL_NewPatient",
	"properties": {
		"activities": [
			{
				"name": "DF_LoadFlatToFF",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "SPA_Insert_Into_LogTaskControlFlow",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "NewPatient",
						"type": "DataFlowReference",
						"parameters": {
							"SycleExportDate": {
								"value": "'@{pipeline().parameters.SycleExportDate}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"NewPatientSink": {
								"ServerName": {
									"value": "@pipeline().parameters.ServerName",
									"type": "Expression"
								},
								"DataBase": {
									"value": "@pipeline().parameters.Database",
									"type": "Expression"
								},
								"UserName": {
									"value": "@pipeline().parameters.Username",
									"type": "Expression"
								},
								"Password": {
									"value": "@pipeline().parameters.Password",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "SPA_GetDataTypeError",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DF_LoadFlatToFF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Medical].[usp_getDataTypeErrors]",
					"storedProcedureParameters": {
						"dtTable": {
							"value": "NewPatientsmodified_DT",
							"type": "String"
						},
						"ffTable": {
							"value": "NewPatientsModified_FF",
							"type": "String"
						},
						"schemaName": {
							"value": "Medical",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_Source__ME_DB",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@pipeline().parameters.Database",
							"type": "Expression"
						},
						"UserName": {
							"value": "@pipeline().parameters.UserName",
							"type": "Expression"
						},
						"Password": {
							"value": "@pipeline().parameters.Password",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SPA_LoadDTToMaster",
				"description": "SP to load data from DT table to Master table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CPD_LoadFFtoDT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Medical].[usp_NewLoadDTToMaster]",
					"storedProcedureParameters": {
						"MasterTable": {
							"value": "NewPatientMaster",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_Source__ME_DB",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@pipeline().parameters.Database",
							"type": "Expression"
						},
						"UserName": {
							"value": "@pipeline().parameters.UserName",
							"type": "Expression"
						},
						"Password": {
							"value": "@pipeline().parameters.Password",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "CPD_LoadFFtoDT",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SPA_GetDataTypeError",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT \n[CustomerID]\n,FirstName\n,LastName\n,Store\n,[DateofBirth]\n,Street1\n,Street2\n,City\n,State\n,Zip\n,CONCAT(ISNULL([Area Code],''),REPLACE(ISNULL(Phone,''),'-','')) AS Phone1\n,CONCAT(ISNULL([Cell Area Code],''),REPLACE(ISNULL([Cell Phone],''),'-','')) AS Phone2\n,[Email]\n,[RefSource]\n,[SubRefSource]\n,[CallStatus]\n,[HIPAAWaiverSigned]\n,LastHearingAidPurchase\n,LastHearingTest\n,LastModified\n,SycleExportDate\n,FranchiseOwner\nFROM Medical.NewPatientsModified_FF Where GoodtoImport=1",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "Truncate table  [Medical].[NewPatientsModified_DT]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "CustomerID",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "CustomerID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Store",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Store",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LastName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DateofBirth",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "DateofBirth",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Street1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Street1",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Street2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Street2",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "City",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "State",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "State",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Zip",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Zip",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Phone1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Phone1",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Phone2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Phone2",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Email",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CallStatus",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "CallStatus",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "HIPAAWaiverSigned",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "HIPAAWaiverSigned",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RefSource",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "RefSource",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SubRefSource",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SubRefSource",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "LastHearingAidPurchase",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LastHearingAidPurchase",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "LastHearingTest",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LastHearingTest",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "LastModified",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "LastModified",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "SycleExportDate",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SycleExportDate",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "FranchiseOwner",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "FranchiseOwner",
									"type": "String",
									"physicalType": "varchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SyclePatientFF",
						"type": "DatasetReference",
						"parameters": {
							"ServerName": {
								"value": "@pipeline().parameters.ServerName",
								"type": "Expression"
							},
							"Database": {
								"value": "@pipeline().parameters.Database",
								"type": "Expression"
							},
							"UserName": {
								"value": "@pipeline().parameters.Username",
								"type": "Expression"
							},
							"Password": {
								"value": "@pipeline().parameters.Password",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SyclePatientDT",
						"type": "DatasetReference",
						"parameters": {
							"ServerName": {
								"value": "@pipeline().parameters.ServerName",
								"type": "Expression"
							},
							"Database": {
								"value": "@pipeline().parameters.Database",
								"type": "Expression"
							},
							"UserName": {
								"value": "@pipeline().parameters.Username",
								"type": "Expression"
							},
							"Password": {
								"value": "@pipeline().parameters.Password",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "CPD_LoadFFToAE",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SPA_GetDataTypeError",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT \n[CustomerID]\n,FirstName\n,LastName\n,Store\n,[DateofBirth]\n,Street1\n,Street2\n,City\n,State\n,Zip\n,CONCAT(ISNULL([Area Code],''),REPLACE(ISNULL(Phone,''),'-','')) AS Phone1\n,CONCAT(ISNULL([Cell Area Code],''),REPLACE(ISNULL([Cell Phone],''),'-','')) AS Phone2\n,[Email]\n,[RefSource]\n,[SubRefSource]\n,[CallStatus]\n,[HIPAAWaiverSigned]\n,LastHearingAidPurchase\n,LastHearingTest\n,LastModified\n,SycleExportDate\n,FranchiseOwner\n,GoodToImport\n,ErrorDescription\nFROM Medical.NewPatientsModified_FF Where GoodtoImport=0",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "Truncate table  [Medical].[NewPatientsModified_AE]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "CustomerID",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "CustomerID",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Store",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Store",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LastName",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "DateofBirth",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "DateofBirth",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Street1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Street1",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Street2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Street2",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "City",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "State",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "State",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Zip",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Zip",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Phone1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Phone1",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Phone2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Phone2",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Email",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "CallStatus",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "CallStatus",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "HIPAAWaiverSigned",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "HIPAAWaiverSigned",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "RefSource",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "RefSource",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "SubRefSource",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SubRefSource",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "LastHearingAidPurchase",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LastHearingAidPurchase",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "LastHearingTest",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LastHearingTest",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "GoodToImport",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "GoodToImport",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ErrorDescription",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ErrorDescription",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "LastModified",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "LastModified",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "SycleExportDate",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SycleExportDate",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "FranchiseOwner",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "FranchiseOwner",
									"type": "String",
									"physicalType": "nvarchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SyclePatientFF",
						"type": "DatasetReference",
						"parameters": {
							"ServerName": {
								"value": "@pipeline().parameters.ServerName",
								"type": "Expression"
							},
							"Database": {
								"value": "@pipeline().parameters.Database",
								"type": "Expression"
							},
							"UserName": {
								"value": "@pipeline().parameters.Username",
								"type": "Expression"
							},
							"Password": {
								"value": "@pipeline().parameters.Password",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SyclePatientAE",
						"type": "DatasetReference",
						"parameters": {
							"ServerName": {
								"value": "@pipeline().parameters.ServerName",
								"type": "Expression"
							},
							"Database": {
								"value": "@pipeline().parameters.Database",
								"type": "Expression"
							},
							"UserName": {
								"value": "@pipeline().parameters.Username",
								"type": "Expression"
							},
							"Password": {
								"value": "@pipeline().parameters.Password",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "SPA_Insert_Into_LogTaskControlFlow",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Medical].[InsertLogTaskControlFlow]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartTime": {
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							},
							"type": "Datetime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "MedicalLS",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@pipeline().parameters.Database",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SPA_DF_LoadFlatToFF_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DF_LoadFlatToFF",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Medical].[UpdateLogTaskControlFlowFailure]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorDescription": {
							"value": {
								"value": "@activity('DF_LoadFlatToFF').error.message",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "MedicalLS",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@pipeline().parameters.Database",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SPA_GetDataTypeError_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SPA_GetDataTypeError",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Medical].[UpdateLogTaskControlFlowFailure]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorDescription": {
							"value": {
								"value": "@activity('SPA_GetDataTypeError').error.message",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "MedicalLS",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@pipeline().parameters.Database",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SPA_LoadFFToAE_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CPD_LoadFFToAE",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Medical].[UpdateLogTaskControlFlowFailure]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorDescription": {
							"value": {
								"value": "@activity('CPD_LoadFFToAE').error.message",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "MedicalLS",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@pipeline().parameters.Database",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SPA_LoadFFToDT_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CPD_LoadFFtoDT",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Medical].[UpdateLogTaskControlFlowFailure]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorDescription": {
							"value": {
								"value": "@activity('CPD_LoadFFtoDT').error.message",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "MedicalLS",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@pipeline().parameters.Database",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SPA_LoadDTToMaster_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SPA_LoadDTToMaster",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Medical].[UpdateLogTaskControlFlowFailure]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorDescription": {
							"value": {
								"value": "@activity('SPA_LoadDTToMaster').error.message",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "MedicalLS",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@pipeline().parameters.Database",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SPA_Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SPA_LoadDTToMaster",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Medical].[UpdateLogTaskControlFlow]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "MedicalLS",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@pipeline().parameters.Database",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"ServerName": {
				"type": "string"
			},
			"Database": {
				"type": "string"
			},
			"Username": {
				"type": "string"
			},
			"Password": {
				"type": "string"
			},
			"SycleExportDate": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Sycle"
		},
		"annotations": []
	}
}